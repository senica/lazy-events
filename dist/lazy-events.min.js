!function(e){function t(e={}){function t(t,r,n=!0){if("function"!=typeof r)throw new Error("Callback on events must be a function.");return void 0===_[t]&&(_[t]=[],_[t].__ran__=!1,_[t].__args__=[]),_[t].push(r),_[t].__ran__&&n&&r.apply(e,_[t].__args__),e}function r(r,o,_=!0){let f=()=>{let t=Array.from(arguments);o.apply(e,t),n(r,f)};return t(r,f,_),e}function n(t,r){if(void 0!==_[t]){if(void 0!==r){for(let e=0;e<_[t].length;e++)_[t][e]===r&&(_[t].splice(e,1),e--);return e}delete _[t]}}function o(t){void 0===_[t]&&(_[t]=[]);let r=Array.from(arguments);return r.shift(),_[t].__ran__=!0,_[t].__args__=r,_[t].forEach(r=>{r.apply(e,_[t].__args__)}),void 0!==_["*"]&&_["*"].forEach(r=>{r.apply(e,[].concat(t,_[t].__args__))}),e}const _={};return Object.defineProperty(e,"on",{get:()=>t}),Object.defineProperty(e,"one",{get:()=>r}),Object.defineProperty(e,"off",{get:()=>n}),Object.defineProperty(e,"emit",{get:()=>o}),e}Object.defineProperty(e,"LazyEvents",{get:()=>t})}(window);